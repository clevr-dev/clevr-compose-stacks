---
version: "3.3"

networks:
  public:
    name: ${PUBLIC_NETWORK}
    external: true

services:
  app:
    image: "${APP_IMAGE}:${APP_IMAGE_TAG}
    restart: always
    networks:
      - public
    labels:
      # enable traefik
      - "traefik.enable=true"
      - "traefik.docker.network=${PUBLIC_NETWORK}"
      # specify exposed port.
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}.loadbalancer.server.port=${APP_PUBLIC_PORT}"
      # define http entrypoint.
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}.rule=Host(`${APP_DNS_NAME}.${DNS_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}.middlewares=https_redirect"
      # define https entrypoint.
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_secure.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_secure.rule=Host(`${APP_DNS_NAME}.${DNS_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_secure.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_secure.tls.certresolver=letsencrypt"
      # define and set basic auth middleware for secure route (optional).
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_auth.basicauth.users=${APP_USERNAME}:${APP_PASSWORD_HASH}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_secure.middlewares=${COMPOSE_PROJECT_NAME}_${APP_DNS_NAME}_auth"
